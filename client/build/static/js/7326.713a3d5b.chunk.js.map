{"version":3,"file":"static/js/7326.713a3d5b.chunk.js","mappings":"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","sources":["icons/Eye.tsx","icons/Key.tsx","webpack://client/./src/pages/auth/reset-password/ResetPassword.module.css?495d","pages/auth/reset-password/ResetPassword.tsx"],"sourcesContent":["import React from 'react';\n\nconst Eye = ({ onClick, ...props }: { onClick: () => void; style: object }) => {\n  return (\n    <svg\n      onClick={onClick}\n      width='16'\n      height='16'\n      viewBox='0 0 18 18'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        d='M2.94726 12.4584L3.75164 11.7041C2.87088 10.9572 2.17887 10.0331 1.72664 9C2.86851 6.30656 6.01851 4.21875 8.99976 4.21875C9.76695 4.22831 10.5272 4.35756 11.2498 4.60125L12.1216 3.7725C11.1331 3.37795 10.0728 3.16865 8.99976 3.15625C7.1663 3.22137 5.39323 3.79245 3.89969 4.79892C2.40614 5.80539 1.2576 7.20313 0.596011 8.81938C0.55133 8.93609 0.55133 9.06391 0.596011 9.18062C1.09565 10.4328 1.90125 11.5559 2.94726 12.4584Z'\n        fill='#A5A594'\n      />\n      <path\n        d='M6.75 8.85656C6.78912 8.34747 7.02095 7.86869 7.40311 7.50776C7.78527 7.14683 8.29221 6.92788 8.83125 6.89094L9.84937 5.92406C9.27887 5.78219 8.67895 5.78403 8.10943 5.92941C7.53991 6.07478 7.02068 6.35861 6.60352 6.7526C6.18636 7.14658 5.88584 7.63696 5.73191 8.17484C5.57798 8.71272 5.57603 9.27931 5.72625 9.81813L6.75 8.85656ZM17.4037 8.81938C16.7587 7.23264 15.6364 5.85873 14.175 4.86688L16.875 2.31156L16.0819 1.5625L1.125 15.6884L1.91813 16.4375L4.78688 13.7281C6.06593 14.4368 7.51727 14.8211 9 14.8438C10.8335 14.7786 12.6065 14.2075 14.1001 13.2011C15.5936 12.1946 16.7422 10.7969 17.4037 9.18062C17.4484 9.06391 17.4484 8.93609 17.4037 8.81938ZM11.25 9C11.2476 9.37193 11.1419 9.73676 10.9435 10.058C10.7451 10.3793 10.4608 10.6457 10.1192 10.8307C9.77751 11.0157 9.39044 11.1128 8.99662 11.1122C8.60281 11.1117 8.21605 11.0135 7.875 10.8275L10.935 7.9375C11.1372 8.25929 11.2459 8.62582 11.25 9ZM9 13.7812C7.81991 13.7618 6.66219 13.4739 5.625 12.9419L7.05375 11.5925C7.70363 12.0184 8.49124 12.2151 9.27907 12.1484C10.0669 12.0817 10.8049 11.7558 11.3642 11.2276C11.9235 10.6993 12.2686 10.0023 12.3393 9.25826C12.4099 8.51419 12.2015 7.77033 11.7506 7.15656L13.365 5.63188C14.6557 6.46858 15.665 7.63757 16.2731 9C15.1313 11.6934 11.9812 13.7812 9 13.7812Z'\n        fill='#A5A594'\n      />\n    </svg>\n  );\n};\n\nexport default Eye;\n","import React from 'react';\n\nconst Key: React.FC = ({ ...props }) => {\n  return (\n    <svg\n      width='20'\n      height='20'\n      viewBox='0 0 24 24'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        d='M16.7 9.35001C17.777 9.35001 18.65 8.47697 18.65 7.40001C18.65 6.32306 17.777 5.45001 16.7 5.45001C15.623 5.45001 14.75 6.32306 14.75 7.40001C14.75 8.47697 15.623 9.35001 16.7 9.35001Z'\n        stroke='#A5A594'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      />\n      <path\n        d='M10.2002 10.2C9.8179 8.96087 9.86685 7.62876 10.339 6.42103C10.8112 5.21329 11.6788 4.20124 12.8002 3.55C13.9282 2.9013 15.2455 2.66146 16.5297 2.87096C17.814 3.08045 18.9868 3.72645 19.8502 4.7C20.7104 5.66419 21.2148 6.89368 21.2796 8.18419C21.3444 9.47469 20.9657 10.7485 20.2064 11.794C19.4471 12.8395 18.3529 13.5937 17.1056 13.9314C15.8584 14.269 14.5332 14.1697 13.3502 13.65'\n        stroke='#A5A594'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      />\n      <path\n        d='M10.2 10.2L2.75 18.5V21.2H5.8L6.15 19.1L9.4 18.9L9.65 16.15L12.4 16.1L13.3 13.7'\n        stroke='#A5A594'\n      />\n    </svg>\n  );\n};\n\nexport default Key;\n","// extracted by mini-css-extract-plugin\nexport default {\"parent__container\":\"ResetPassword_parent__container__OA3ik\",\"logo\":\"ResetPassword_logo__bPl-p\",\"heading3\":\"ResetPassword_heading3__t8-0a\",\"input__label\":\"ResetPassword_input__label__jBUyA\",\"btn__div\":\"ResetPassword_btn__div__szjco\",\"btn1\":\"ResetPassword_btn1__xpz7q\",\"go__back\":\"ResetPassword_go__back__OHJTA\",\"text\":\"ResetPassword_text__C5hV0\",\"password__resend\":\"ResetPassword_password__resend__MoT2b\",\"extra__btn__styles\":\"ResetPassword_extra__btn__styles__l2ygZ\",\"extra__styles\":\"ResetPassword_extra__styles__nJkt4\",\"resend__link\":\"ResetPassword_resend__link__8A251\",\"expirery_time\":\"ResetPassword_expirery_time__wNHIB\",\"additional\":\"ResetPassword_additional__vVGL-\",\"new__password\":\"ResetPassword_new__password__vL3uH\",\"success\":\"ResetPassword_success__3-Fs2\",\"auth__container\":\"ResetPassword_auth__container__a5K2C\",\"container\":\"ResetPassword_container__ndLnY\",\"header\":\"ResetPassword_header__xxKGG\",\"caption\":\"ResetPassword_caption__AKd4Z\",\"expiration\":\"ResetPassword_expiration__+PKD0\",\"noCode\":\"ResetPassword_noCode__5zH6C\",\"otpInput\":\"ResetPassword_otpInput__Wf8yz\"};","import { useState } from 'react';\n\nimport styles from './ResetPassword.module.css';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport CustomInputField from '../../../components/shared/auth/input/CustomInput';\nimport Key from '../../../icons/Key';\nimport Eye from '../../../icons/Eye';\nimport EmailStrokes from '../../../icons/EmailStrokes';\nimport BackwardArrow from '../../../icons/BackwardArrow';\nimport NavBar from '../../../components/shared/navbar/NavBar';\nimport AuthLayout, { Directions } from '../../../components/layout/authlayout/AuthLayout';\nimport AuthInfo from '../../../components/block/auth/authinfo/AuthInfo';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { resetPasswordAction } from '../../../store/features/slices/auth/auth.action';\nimport { toast } from 'react-toastify';\nimport { paths } from '../../../routers/paths';\nimport { getLocalEmail } from '../../../utils/localStorage';\nimport Button from '../../../components/admin/button/Button.component';\n\nconst ResetPassword = () => {\n  const dispatch = useAppDispatch();\n  const { loading } = useAppSelector((state) => state.loader);\n  const navigate = useNavigate();\n\n  const [passwordShow, setPasswordShow] = useState<boolean>(false);\n  const [password, setPassword] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const localEmail = getLocalEmail();\n\n  const handleShowPassword = () => {\n    setPasswordShow(!passwordShow);\n  };\n\n  const { token } = useParams();\n\n  const clearInputs = () => {\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const handlePasswordReset = () => {\n    if (localEmail === null) return;\n    else if (password !== confirmPassword) {\n      setError('Password does not match');\n      return;\n    } else if (password === '' || confirmPassword === '') {\n      setError('Password required');\n      return;\n    } else {\n      const data = {\n        email: localEmail,\n        password,\n        token,\n      };\n      clearInputs();\n      setError('');\n      dispatch(resetPasswordAction(data))\n        .then((res) => {\n          const { payload } = res;\n          if (payload?.status === 400 || payload?.status === 404) {\n            toast.error(payload?.message);\n            return;\n          } else {\n            toast.success(payload?.message);\n            navigate(paths.AUTH);\n            localStorage.removeItem('email');\n          }\n        })\n        .catch((err) => {\n          toast.error(err?.message);\n          return;\n        });\n    }\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className={styles.auth__container}>\n        <AuthLayout dir={Directions.right}>\n          <>\n            <div className={styles.parent__container}>\n              <div className={styles.logo}>\n                <EmailStrokes />\n              </div>\n              <h3 className={styles.heading3}>Set New Password</h3>\n              <p className={styles.new__password}>\n                Your New Password must be different from the previous\n              </p>\n              <p className={styles.input__label}>Password</p>\n              <CustomInputField\n                name='password'\n                type={passwordShow ? 'text' : 'password'}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                left={true}\n                placeholder='Enter your Password'\n                icon={<Key />}\n                iconRight={<Eye onClick={handleShowPassword} style={{ cursor: 'pointer' }} />}\n                error={error}\n              />\n              <p style={{ marginTop: '1rem' }} className={styles.input__label}>\n                Confirm Password\n              </p>\n              <CustomInputField\n                name='confirm password'\n                type={passwordShow ? 'text' : 'password'}\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                left={true}\n                placeholder='Enter your Password'\n                icon={<Key />}\n                iconRight={<Eye onClick={handleShowPassword} style={{ cursor: 'pointer' }} />}\n              />\n              <div className={styles.btn__div}>\n                <Button\n                  text='Reset Password'\n                  onClick={handlePasswordReset}\n                  loading={loading}\n                  padding='14px'\n                />\n              </div>\n              <Button\n                text='Back To Sign in'\n                bgColor=''\n                color='#003B33'\n                renderIcon={() => <BackwardArrow />}\n                margin='20px 0'\n                onClick={() => navigate(paths.AUTH)}\n              />\n            </div>\n          </>\n          <AuthInfo\n            heading='Hello there!'\n            description='Enter your personal info and start a journey with us.'\n            btnText='Sign up'\n            link='/login'\n          />\n        </AuthLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"names":["_ref","onClick","props","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","stroke","strokeLinecap","strokeLinejoin","ResetPassword","dispatch","useAppDispatch","loading","useAppSelector","state","loader","navigate","useNavigate","passwordShow","setPasswordShow","useState","password","setPassword","confirmPassword","setConfirmPassword","error","setError","localEmail","getLocalEmail","handleShowPassword","token","useParams","NavBar","className","styles","AuthLayout","dir","Directions","right","_Fragment","EmailStrokes","CustomInputField","name","type","value","onChange","e","target","left","placeholder","icon","Key","iconRight","Eye","style","cursor","marginTop","Button","text","handlePasswordReset","data","email","resetPasswordAction","then","res","payload","status","toast","success","message","paths","AUTH","localStorage","removeItem","catch","err","padding","bgColor","color","renderIcon","BackwardArrow","margin","AuthInfo","heading","description","btnText","link"],"sourceRoot":""}