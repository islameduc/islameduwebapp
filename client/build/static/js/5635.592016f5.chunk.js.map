{"version":3,"file":"static/js/5635.592016f5.chunk.js","mappings":"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","sources":["webpack://client/./src/components/block/home/hero/hero.module.css?9579","components/block/home/hero/Hero.tsx","lib/hooks/ScrollView.ts","webpack://client/./src/components/labelling/navbar/navbar.module.css?08ec","components/labelling/navbar/NavBar.component.tsx","layouts/LabellingLayout.layout.tsx","webpack://client/./src/components/labelling/logo-select/LogoSelect.module.css?28c1","components/labelling/logo-select/LogoSelect.component.tsx","components/labelling/navbar/PreviewNavbar.component.tsx","../node_modules/react-colorful/src/hooks/useEventCallback.ts","../node_modules/react-colorful/src/utils/clamp.ts","../node_modules/react-colorful/src/components/common/Interactive.tsx","../node_modules/react-colorful/src/utils/format.ts","../node_modules/react-colorful/src/components/common/Pointer.tsx","../node_modules/react-colorful/src/utils/round.ts","../node_modules/react-colorful/src/utils/convert.ts","../node_modules/react-colorful/src/components/common/Hue.tsx","../node_modules/react-colorful/src/components/common/Saturation.tsx","../node_modules/react-colorful/src/utils/compare.ts","../node_modules/react-colorful/src/hooks/useColorManipulation.ts","../node_modules/react-colorful/src/utils/nonce.ts","../node_modules/react-colorful/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-colorful/src/hooks/useStyleSheet.ts","../node_modules/react-colorful/src/components/common/Alpha.tsx","../node_modules/react-colorful/src/components/common/AlphaColorPicker.tsx","../node_modules/react-colorful/src/components/RgbaColorPicker.tsx","webpack://client/./src/pages/labelling/home/Home.module.css?2a29","components/labelling/logo-select/BgSelect.component.tsx","pages/labelling/home/Home.page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hero__container\":\"hero_hero__container__+Gymc\",\"logo\":\"hero_logo__aiDKl\",\"hero__heading\":\"hero_hero__heading__feJEi\",\"hero__p\":\"hero_hero__p__42Mij\",\"flag\":\"hero_flag__q4UGH\",\"btn__arrow\":\"hero_btn__arrow__WE-Cu\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRightIcon } from '../../../../assets/svg';\nimport Logo from '../../../../icons/Logo';\nimport { flag } from '../../../../static/assets/images';\nimport hero from '../../../../static/assets/images/RT/monument.jpeg';\nimport Button from '../../../admin/button/Button.component';\nimport styles from './hero.module.css';\n\ninterface IProps {\n  logoImage?: string;\n  logoBgColor?: string;\n  heroImage?: string;\n  buttonColor?: string | any;\n  headingWidth?: string;\n}\n\nconst Hero = ({ logoBgColor = '', headingWidth }: IProps) => {\n  // State to determine screen width\n  const [isSmallScreen, setIsSmallScreen] = useState(window.innerWidth < 583);\n\n  // Function to update the state based on window width\n  const handleResize = () => {\n    setIsSmallScreen(window.innerWidth < 583);\n  };\n\n  // Add an event listener to handle window resize\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    // Cleanup the event listener on component unmount\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Conditional button styles\n  const buttonStyle = {\n    marginRight: '15px',\n    padding: '13px 20px',\n    backgroundColor: isSmallScreen ? 'transparent' : '#003B33',\n    color: '#FFFFFF',\n    fontSize: '1em',\n    border: isSmallScreen ? '2px solid #fff' : 'none',\n    cursor: 'pointer',\n    borderRadius: '5px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n\n  const iconStyle = {\n    width: '14px',\n    height: '12px',\n    marginLeft: '5px',\n  };\n\n  return (\n    <div\n      className={styles.hero__container}\n      style={{\n        backgroundImage: `linear-gradient(rgba(0, 38, 42,0.8), rgba(0, 38, 42,0.8)), url(${hero})`,\n      }}\n    >\n      <div className={styles.logo} style={{ backgroundColor: logoBgColor }}>\n        <Logo width='100%' height='100%' />\n      </div>\n      <h1 className={styles.hero__heading} style={{ width: headingWidth ?? '40%' }}>\n        Welcome to I.P.E.S\n      </h1>\n      <p className={styles.hero__p}>\n        The Islamic Private Education Secretariat with accronyn as (IPES) works to promote the\n        rights to education of Muslim girls who have been relegated, internally displaced persons\n        (IDPS) who are out of School and the economic empowerment of women and Minority groups.\n      </p>\n      <div className={styles.flag}>\n        <img src={flag} alt='Flag' crossOrigin='anonymous' />\n      </div>\n      <Link to='/auth?tab=signup' style={{ textDecoration: 'none' }}>\n        <Button\n          text='Join Our Community'\n          style={buttonStyle}\n          renderIcon={() => (\n            <ArrowRightIcon style={iconStyle} />\n          )}\n          iconAfter\n        />\n      </Link>\n    </div>\n  );\n};\n\nexport default Hero;\n","import { useEffect, useState } from 'react';\n\nexport const UseScrollPosition = () => {\n  // initially we have the scroll position of the entire window set unto 0\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset);\n    };\n\n    // update the scroll position upon scrolling\n    window.addEventListener('scroll', updatePosition);\n\n    updatePosition();\n\n    // clean-up function\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, []);\n\n  return scrollPosition;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main__container\":\"navbar_main__container__pyF8w\",\"shadow\":\"navbar_shadow__OksLI\",\"nav__content\":\"navbar_nav__content__8KD5o\",\"navlinks\":\"navbar_navlinks__mB7n7\",\"activeLink\":\"navbar_activeLink__nXVlu\",\"nav_links\":\"navbar_nav_links__RV1rU\",\"btn__arrow\":\"navbar_btn__arrow__MR8JS\",\"btn__signin\":\"navbar_btn__signin__gK5uP\",\"user__profile\":\"navbar_user__profile__mj01o\"};","import { useRef } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport { UseScrollPosition } from '../../../lib/hooks/ScrollView';\nimport { labellingNavlinks, paths } from '../../../routers/paths';\nimport styles from './navbar.module.css';\nimport Button from '../../admin/button/Button.component';\nimport { ArrowDownIcon } from '../../../assets/svg';\nimport { toast } from 'react-toastify';\nimport logo from '../../../assets/images/labelling_logo.png';\n\nconst NavBar = () => {\n  const ref = useRef(toast);\n  const pos = UseScrollPosition();\n  const navigate = useNavigate();\n\n  const handleAuth = () => {\n    navigate(paths.AUTH);\n  };\n\n  return (\n    <div className={`${styles.main__container} ${pos > 100 ? styles.shadow : ''}`}>\n      <div style={{ width: '100px', height: '40px' }}>\n        <Link to='/'>\n          <img src={logo} style={{ width: '100%', height: '100%', objectFit: 'contain' }} />\n        </Link>\n      </div>\n      <div className={styles.nav__content}>\n        <div className={styles.navlinks}>\n          {labellingNavlinks.map((link, index: number) => (\n            <NavLink\n              className={({ isActive }) =>\n                isActive ? `${styles.nav_links} ${styles.activeLink}` : `${styles.nav_links}`\n              }\n              key={link.path}\n              to={link.path}\n            >\n              {link.label}\n              {index > 1 && <ArrowDownIcon width='15' height='7' style={{ marginLeft: '10px' }} />}\n            </NavLink>\n          ))}\n        </div>\n        <Button text='Book Consultant' onClick={handleAuth} padding='10px 10px' bgColor='#036E67' />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { ReactNode } from 'react';\nimport NavBar from '../components/labelling/navbar/NavBar.component';\n\ninterface IProps {\n  children?: ReactNode | ReactNode[];\n  childrenPadding?: string;\n}\n\nconst LabellingLayout = ({ children, childrenPadding = '14px 25px' }: IProps) => {\n  return (\n    <>\n      <NavBar />\n      <div\n        style={{\n          boxSizing: 'border-box',\n          overflowX: 'hidden',\n          minHeight: '100vh',\n          padding: childrenPadding,\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default LabellingLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LogoSelect_container__FyjYO\",\"heading\":\"LogoSelect_heading__DPn5L\",\"label\":\"LogoSelect_label__SR7YJ\",\"logos\":\"LogoSelect_logos__mevUk\",\"logoImageContainer\":\"LogoSelect_logoImageContainer__EyHMo\",\"imageContainer\":\"LogoSelect_imageContainer__GPxO2\",\"image\":\"LogoSelect_image__EpkUA\",\"deleteBtn\":\"LogoSelect_deleteBtn__5pTuz\"};","import { logoImages } from '../../../assets/data/logoImages';\nimport { AddDottedIcon } from '../../../assets/svg';\nimport Button from '../../admin/button/Button.component';\nimport { useState } from 'react';\nimport classes from './LogoSelect.module.css';\n\nexport interface LogoSelectProps {\n  title?: string;\n  label?: string;\n  images?: any[];\n  onClick?: (item?: any) => void;\n  onDeleteLogo?: (item?: any) => void;\n  onChange?: any;\n}\n\nconst LogoSelect = ({\n  title = 'Choose Logo',\n  label = 'Recent Uploads',\n  images = [],\n  onClick,\n  onChange,\n  onDeleteLogo,\n}: LogoSelectProps) => {\n  const [activeImage, setActiveImage] = useState<string>('');\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.heading}>{title}</h2>\n      <span className={classes.label}>{label}</span>\n      <div className={classes.logos}>\n        {images?.length > 0 &&\n          images?.map((img: any) => (\n            <div key={img.id} className={classes.logoImageContainer}>\n              <div className={classes.imageContainer}>\n                <img\n                  src={img.src ?? img}\n                  alt='logo'\n                  className={classes.image}\n                  onClick={() => onClick?.(img)}\n                  onMouseOver={() => setActiveImage(img)}\n                  onMouseLeave={() => setActiveImage('')}\n                />\n              </div>\n              <div className={classes.deleteBtn} onClick={() => onDeleteLogo?.(img)}>\n                Delete\n              </div>\n            </div>\n          ))}\n        <input id='upload' type='file' style={{ display: 'none' }} onChange={onChange} />\n        <label htmlFor='upload' className={classes.imageContainer}>\n          <AddDottedIcon />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default LogoSelect;\n","import { useRef } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport { UseScrollPosition } from '../../../lib/hooks/ScrollView';\nimport { navlinks, paths } from '../../../routers/paths';\nimport Button from '../../admin/button/Button.component';\nimport { toast } from 'react-toastify';\nimport logo from '../../../assets/images/labelling_logo.png';\nimport styles from './navbar.module.css';\n\nconst PreviewNavBar = ({\n  style,\n  logoImage,\n  themeColor = '#036E67',\n}: {\n  style?: object;\n  logoImage?: string;\n  themeColor?: string;\n}) => {\n  const ref = useRef(toast);\n  const pos = UseScrollPosition();\n  const navigate = useNavigate();\n\n  const handleAuth = () => {\n    navigate(paths.AUTH);\n  };\n\n  return (\n    <div className={`${styles.main__container} ${pos > 100 ? styles.shadow : ''}`} style={style}>\n      <div style={{ width: '100px', height: '40px' }}>\n        <Link to='/labelling/home'>\n          <img\n            src={logoImage || logo}\n            style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n          />\n        </Link>\n      </div>\n      <div className={styles.nav__content}>\n        <div className={styles.navlinks} style={{ paddingRight: '0' }}>\n          {navlinks.map((link, index: number) => (\n            <NavLink\n              className={({ isActive }) =>\n                isActive ? `${styles.nav_links} ${styles.activeLink}` : `${styles.nav_links}`\n              }\n              key={link.path}\n              to={link.path}\n            >\n              {link.label}\n            </NavLink>\n          ))}\n        </div>\n        <Button text='Sign up' padding='10px' bgColor={themeColor} />\n        <Button\n          text='Sign In'\n          padding='10px'\n          style={{ border: `1px solid ${themeColor}`, marginLeft: '10px' }}\n          bgColor='transparent'\n          color={themeColor}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PreviewNavBar;\n","import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n","import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n","import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n","import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substring(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuenow={round(hue)}\n        aria-valuemax=\"360\"\n        aria-valuemin=\"0\"\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n","import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n","import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n","declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n","import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { RefObject } from \"react\";\n\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>): void => {\n  useIsomorphicLayoutEffect(() => {\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\");\n      styleElement.innerHTML = styles;\n      styleElementMap.set(parentDocument, styleElement);\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      parentDocument.head.appendChild(styleElement);\n    }\n  }, []);\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslaString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\nimport { HsvaColor } from \"../../types\";\n\ninterface Props {\n  className?: string;\n  hsva: HsvaColor;\n  onChange: (newAlpha: { a: number }) => void;\n}\n\nexport const Alpha = ({ className, hsva, onChange }: Props): JSX.Element => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ a: interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Alpha always fit into [0, 1] range\n    onChange({ a: clamp(hsva.a + offset.left) });\n  };\n\n  // We use `Object.assign` instead of the spread operator\n  // to prevent adding the polyfill (about 150 bytes gzipped)\n  const colorFrom = hsvaToHslaString(Object.assign({}, hsva, { a: 0 }));\n  const colorTo = hsvaToHslaString(Object.assign({}, hsva, { a: 1 }));\n\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(90deg, ${colorFrom}, ${colorTo})`,\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__alpha\", className]);\n  const ariaValue = round(hsva.a * 100);\n\n  return (\n    <div className={nodeClassName}>\n      <div className=\"react-colorful__alpha-gradient\" style={gradientStyle} />\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Alpha\"\n        aria-valuetext={`${ariaValue}%`}\n        aria-valuenow={ariaValue}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        <Pointer\n          className=\"react-colorful__alpha-pointer\"\n          left={hsva.a}\n          color={hsvaToHslaString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\nimport { Alpha } from \"./Alpha\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const AlphaColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} />\n      <Alpha hsva={hsva} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, RgbaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { rgbaToHsva, hsvaToRgba } from \"../utils/convert\";\n\nconst colorModel: ColorModel<RgbaColor> = {\n  defaultColor: { r: 0, g: 0, b: 0, a: 1 },\n  toHsva: rgbaToHsva,\n  fromHsva: hsvaToRgba,\n  equal: equalColorObjects,\n};\n\nexport const RgbaColorPicker = (props: Partial<ColorPickerBaseProps<RgbaColor>>): JSX.Element => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"navSwitchContainer\":\"Home_navSwitchContainer__sLnEz\",\"navSwitch\":\"Home_navSwitch__hI5ve\",\"switchItem\":\"Home_switchItem__XtPaI\",\"switchItemActive\":\"Home_switchItemActive__e1B3C\",\"container\":\"Home_container__MB3zK\",\"editView\":\"Home_editView__UTGSs\",\"editViewLeft\":\"Home_editViewLeft__c5PLR\",\"editViewLeftBottom\":\"Home_editViewLeftBottom__8F5e7\",\"chooseBottom\":\"Home_chooseBottom__UWsmG\",\"chooseBgText\":\"Home_chooseBgText__1ZtaJ\",\"editViewRight\":\"Home_editViewRight__k2eqp\",\"actionButtons\":\"Home_actionButtons__PQSz6\"};","import { logoImages } from '../../../assets/data/logoImages';\nimport { AddDottedIcon } from '../../../assets/svg';\nimport Button from '../../admin/button/Button.component';\nimport { useState } from 'react';\nimport classes from './LogoSelect.module.css';\nimport { LogoSelectProps } from './LogoSelect.component';\n\nconst BgSelect = ({\n  title = 'Choose Logo',\n  label = 'Recent Uploads',\n  images = [],\n  onClick,\n  onChange,\n  onDeleteLogo,\n}: LogoSelectProps) => {\n  const [activeImage, setActiveImage] = useState<string>('');\n  return (\n    <div className={classes.container}>\n      <h2 className={classes.heading}>{title}</h2>\n      <span className={classes.label}>{label}</span>\n      <div className={classes.logos}>\n        {images?.length > 0 &&\n          images?.map((img: any) => (\n            <div key={img.id} className={classes.logoImageContainer}>\n              <div className={classes.imageContainer}>\n                <img\n                  src={img.httPath ?? img}\n                  alt='logo'\n                  className={classes.image}\n                  onClick={() => onClick?.(img)}\n                  onMouseOver={() => setActiveImage(img)}\n                  onMouseLeave={() => setActiveImage('')}\n                />\n              </div>\n              <div className={classes.deleteBtn} onClick={() => onDeleteLogo?.(img)}>\n                Delete\n              </div>\n            </div>\n          ))}\n        <input id='bgUpload' type='file' style={{ display: 'none' }} onChange={onChange} />\n        <label htmlFor='bgUpload' className={classes.imageContainer}>\n          <AddDottedIcon />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default BgSelect;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport NavBar from '../../../components/labelling/navbar/NavBar.component';\nimport LabellingLayout from '../../../layouts/LabellingLayout.layout';\nimport LogoSelect from '../../../components/labelling/logo-select/LogoSelect.component';\nimport Hero from '../../../components/block/home/hero/Hero';\nimport PreviewNavBar from '../../../components/labelling/navbar/PreviewNavbar.component';\nimport Button from '../../../components/admin/button/Button.component';\nimport { HexColorPicker, RgbaColorPicker } from 'react-colorful';\nimport './color.css';\nimport classes from './Home.module.css';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { setTheming } from '../../../store/features/slices/theming/theming.slice';\nimport BgSelect from '../../../components/labelling/logo-select/BgSelect.component';\n\nconst switchLinks = [\n  {\n    id: 0,\n    label: 'Home',\n  },\n  {\n    id: 1,\n    label: 'Edit',\n  },\n];\n\nconst Home = () => {\n  const { theming } = useAppSelector((state) => state.theming);\n\n  const [active, setActive] = useState<number>(0);\n  const [previews, setPreviews] = useState<any[]>([]);\n  const [logoImage, setLogoImage] = useState<string>(theming.logo);\n  const [bgPreviews, setBgPreviews] = useState<any[]>([]);\n  const [bgImage, setBgImage] = useState<any>(theming.bgImage);\n  const dispatch = useAppDispatch();\n  const handleChange = (e: any) => {\n    if (!e.target.files) return;\n    const preview = URL.createObjectURL(e.target.files[0]);\n    setPreviews((prev: any) => [...prev, preview]);\n  };\n  const handleLogoSelect = (item: any) => {\n    setLogoImage(item);\n  };\n  const handleBgChange = (e: any) => {\n    if (!e.target.files) return;\n    const preview = URL.createObjectURL(e.target.files[0]);\n    setBgPreviews((prev: any) => [...prev, preview]);\n  };\n  const handleBgSelect = (item: any) => {\n    setBgImage(item);\n  };\n  const handleDeleteLogo = (item: any) => {\n    if (item === logoImage) {\n      setLogoImage('');\n    }\n    const prevCopy = [...previews];\n    const index = prevCopy.indexOf(item);\n    prevCopy.splice(index, 1);\n    setPreviews(prevCopy);\n    console.log(item);\n  };\n\n  const handleActiveTab = useCallback(\n    (id: number) => {\n      setActive(id);\n    },\n    [active],\n  );\n\n  const handleTheming = () => {\n    const rgbString = `${color?.r},${color?.g},${color?.b}`;\n    const theming = {\n      logo: logoImage,\n      bgImage,\n      color: rgbString,\n    };\n    dispatch(setTheming(theming));\n  };\n\n  const [color, setColor] = useState({ r: 0, g: 59, b: 51, a: 0.8 });\n\n  return (\n    <LabellingLayout childrenPadding={active === 0 ? '0' : '14px 25px'}> \n      <div className={classes.navSwitchContainer}>\n        <div className={classes.navSwitch}>\n          {switchLinks.map((link: any) => (\n            <div\n              className={\n                link.id === active\n                  ? `${classes.switchItem} ${classes.switchItemActive}`\n                  : classes.switchItem\n              }\n              key={link.id}\n              onClick={() => handleActiveTab(link.id)}\n            >\n              {link.label}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={classes.container}>\n        {active === 0 && (\n          <div className={classes.homeView}>\n            <PreviewNavBar\n              style={{ position: 'relative', zIndex: 0 }}\n              logoImage={logoImage}\n              themeColor={`rgb(${color?.r},${color?.g},${color?.b})`}\n            />\n            <Hero\n              logoImage={logoImage}\n              heroImage={bgImage}\n              headingWidth='50%'\n              buttonColor={`${color?.r},${color?.g},${color?.b}`}\n            />\n          </div>\n        )}\n        {active === 1 && (\n          <div className={classes.editView}>\n            <div className={classes.editViewLeft}>\n              <LogoSelect\n                onChange={handleChange}\n                onClick={(item) => handleLogoSelect(item)}\n                onDeleteLogo={(item) => handleDeleteLogo(item)}\n                images={previews}\n              />\n              <BgSelect\n                onChange={handleBgChange}\n                onClick={(item) => handleBgSelect(item)}\n                images={bgPreviews}\n                title='Choose Background'\n              />\n              <div className={classes.editViewLeftBottom}>\n                <div className={classes.chooseBottom}>\n                  <h2 className={classes.chooseBgText}>Background Colors</h2>\n                  <span className={classes.label}></span>\n                  <Button text='Add Colors' bgColor='' color='#000' />\n                </div>\n                <section className='small'>\n                  <RgbaColorPicker color={color} onChange={setColor} />\n                </section>\n              </div>\n            </div>\n            <div className={classes.editViewRight}>\n              <PreviewNavBar\n                style={{ position: 'relative', zIndex: 0 }}\n                logoImage={logoImage}\n                themeColor={`rgb(${color?.r},${color?.g},${color?.b})`}\n              />\n              <Hero\n                logoImage={logoImage}\n                heroImage={bgImage}\n                headingWidth='50%'\n                buttonColor={`${color?.r},${color?.g},${color?.b}`}\n              />\n              <div className={classes.actionButtons}>\n                <Button\n                  text='Preview'\n                  bgColor='#fff'\n                  border='1px solid #003B33'\n                  color='#003B33'\n                  width='16%'\n                  onClick={() => setActive(0)}\n                />\n                <Button text='Done' width='16%' onClick={handleTheming} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </LabellingLayout>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","logoBgColor","headingWidth","isSmallScreen","setIsSmallScreen","useState","window","innerWidth","handleResize","useEffect","addEventListener","removeEventListener","buttonStyle","marginRight","padding","backgroundColor","color","fontSize","border","cursor","borderRadius","display","alignItems","justifyContent","iconStyle","width","height","marginLeft","_jsxs","className","styles","style","backgroundImage","concat","hero","children","_jsx","Logo","src","flag","alt","crossOrigin","Link","to","textDecoration","Button","text","renderIcon","ArrowRightIcon","iconAfter","UseScrollPosition","scrollPosition","setScrollPosition","updatePosition","pageYOffset","NavBar","useRef","toast","pos","navigate","useNavigate","logo","objectFit","labellingNavlinks","map","link","index","NavLink","isActive","path","label","ArrowDownIcon","onClick","handleAuth","paths","AUTH","bgColor","childrenPadding","_Fragment","boxSizing","overflowX","minHeight","title","images","onChange","onDeleteLogo","activeImage","setActiveImage","classes","length","img","_img$src","onMouseOver","onMouseLeave","id","type","htmlFor","AddDottedIcon","logoImage","themeColor","paddingRight","navlinks","_ref2","useEventCallback","handler","callbackRef","fn","value","current","clamp","number","min","max","isTouch","event","getParentWindow","node","ownerDocument","defaultView","self","getRelativePosition","touchId","rect","getBoundingClientRect","pointer","touches","i","identifier","left","pageX","pageXOffset","top","pageY","preventDefaultMove","preventDefault","Interactive","React","onMove","onKey","rest","container","onMoveCallback","onKeyCallback","hasTouch","x","useMemo","handleMove","buttons","toggleDocumentEvents","handleMoveEnd","state","touch","parentWindow","toggleEvent","nativeEvent","el","changedTouches","focus","keyCode","which","handleMoveStart","handleKeyDown","onTouchStart","onMouseDown","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","nodeClassName","round","digits","base","Math","pow","hsvaToHsla","PI","s","v","a","hh","h","l","hsvaToHslString","hsva","r","hsvaToHslaString","hsvaToRgba","floor","b","c","d","module","g","rgbaToHsva","delta","Hue","hue","interaction","offset","aria-label","aria-valuenow","aria-valuemax","aria-valuemin","Saturation","containerStyle","aria-valuetext","equalColorObjects","first","second","prop","useColorManipulation","colorModel","onChangeCallback","toHsva","updateHsva","cache","equal","newHsva","newColor","fromHsva","handleChange","useCallback","params","Object","assign","nonce","useIsomorphicLayoutEffect","useLayoutEffect","styleElementMap","Map","useStyleSheet","nodeRef","parentDocument","document","has","styleElement","createElement","innerHTML","set","__webpack_nonce__","setAttribute","head","appendChild","Alpha","gradientStyle","ariaValue","AlphaColorPicker","defaultColor","RgbaColorPicker","props","_img$httPath","httPath","switchLinks","Home","theming","useAppSelector","active","setActive","previews","setPreviews","setLogoImage","bgPreviews","setBgPreviews","bgImage","setBgImage","dispatch","useAppDispatch","handleActiveTab","setColor","LabellingLayout","navSwitchContainer","navSwitch","switchItem","switchItemActive","homeView","PreviewNavBar","position","zIndex","Hero","heroImage","buttonColor","editView","editViewLeft","LogoSelect","e","target","files","preview","URL","createObjectURL","prev","item","handleLogoSelect","prevCopy","indexOf","splice","console","log","handleDeleteLogo","BgSelect","handleBgSelect","editViewLeftBottom","chooseBottom","chooseBgText","editViewRight","actionButtons","handleTheming","rgbString","setTheming"],"sourceRoot":""}