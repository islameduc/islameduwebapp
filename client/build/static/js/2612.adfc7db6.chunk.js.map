{"version":3,"file":"static/js/2612.adfc7db6.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/admin/add-post/add-post.module.css?092b","pages/admin/add-post/AddPost.page.tsx","store/features/slices/categories/categories.action.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"add-post_container__PvE5M\",\"modalOverlay\":\"add-post_modalOverlay__9t0Di\",\"modalContent\":\"add-post_modalContent__B+f9z\",\"closeButton\":\"add-post_closeButton__30Ff8\",\"formGroup\":\"add-post_formGroup__D3lpf\",\"imagePreviewContainer\":\"add-post_imagePreviewContainer__EAw0k\",\"imagePreview\":\"add-post_imagePreview__8EDAe\",\"submitButtonContainer\":\"add-post_submitButtonContainer__bGNDT\",\"submitButton\":\"add-post_submitButton__YMmpr\",\"categoryName\":\"add-post_categoryName__JuyUm\",\"title\":\"add-post_title__Ogy2v\",\"label\":\"add-post_label__3J6cJ\",\"select\":\"add-post_select__fsBDG\"};","import React, { useEffect, useRef, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { AttachFileIcon } from '../../../assets/svg';\nimport Input from '../../../components/admin/input/Input.component';\nimport AdminLayout from '../../../layouts/Admin.layout';\nimport TextArea from '../../../components/admin/input/TextArea.component';\nimport Dropdown from '../../../components/admin/input/Dropdown.component';\nimport { blogCategories } from '../../../assets/data/blogCategories';\nimport Button from '../../../components/admin/button/Button.component';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { getMembersAction } from '../../../store/features/slices/members/members.action';\nimport styles from './add-post.module.css';\nimport placeholder from '../../../assets/images/p-placeholder.jpg';\nimport { toast } from 'react-toastify';\nimport { stopLoading } from '../../../store/features/slices/loader/loader.slice';\nimport { useNavigate } from 'react-router-dom';\nimport { paths } from '../../../routers/paths';\nimport { getCategoriesAction } from '../../../store/features/slices/categories/categories.action';\nimport { backendUrls } from '../../../api/urls';\n\ninterface Category {\n  _id: string;\n  name: string;\n}\n\ninterface AddPostModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: () => void;\n  token: string;\n  categories: Category[];\n}\n\nconst AddProject = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const [categories, setCategories] = useState<any>([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]?._id || '');\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n\n  const getAllCategories = () => {\n    dispatch(getCategoriesAction()).then((res: any) => {\n      const { payload } = res;\n      if (payload) {\n        const fetchedCategories = payload;\n        console.log(fetchedCategories);\n        setCategories(fetchedCategories);\n        setSelectedCategory(fetchedCategories[0]._id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllCategories();\n  }, []);\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const file = e.target.files[0];\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('categoryId', selectedCategory);\n    if (image) {\n      formData.append('postImage', image);\n    }\n\n    try {\n      const response = await fetch(backendUrls.posts.ADD_POST, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Authorization': `Bearer ${user?.accessToken}`\n        },\n      });\n      if (response.ok) {\n        toast.success('Post added successfully')\n        navigate(paths.ADMIN.POSTS);\n      } else {\n        console.error('Failed to add post');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className={styles.container}>\n        <div className={styles.modalContent}>\n          <h2 className={styles.title}>Add New Post</h2>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"category\" className={styles.label}>Category</label>\n            <select\n              id=\"category\"\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className={styles.select}\n            >\n              {categories.map((category: Category) => (\n                <option key={category._id} value={category._id}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            <div className={styles.formGroup}>\n              <label htmlFor=\"title\" className={styles.label}>Title</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </div>\n            <div className={styles.formGroup}>\n              <label htmlFor=\"content\" className={styles.label}>Content</label>\n              <ReactQuill\n                value={content}\n                onChange={setContent}\n                theme=\"snow\"\n                modules={{\n                  toolbar: [\n                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                    [{ size: [] }],\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n                    { 'indent': '-1' }, { 'indent': '+1' }],\n                    ['link', 'image', 'video'],\n                    ['clean']\n                  ],\n                }}\n              />\n            </div>\n            <div className={styles.formGroup}>\n              <label htmlFor=\"image\" className={styles.label}>Image</label>\n              <input\n                type=\"file\"\n                id=\"image\"\n                accept=\"image/*\"\n                onChange={handleImageChange}\n              />\n            </div>\n            <div className={styles.imagePreviewContainer}>\n              {imagePreview && <img src={imagePreview} alt=\"Preview\" className={styles.imagePreview} crossOrigin='anonymous' />}\n            </div>\n            <div className={styles.submitButtonContainer}>\n              <button type=\"submit\" className={styles.submitButton}>Add Post</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AddProject;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { backendUrls } from '../../../../api/urls';\nimport { startLoading, stopLoading } from '../loader/loader.slice';\nimport { toast } from 'react-toastify';\nimport axiosInstance from '../../../../api/axiosConfig';\n\nexport const addCategoryAction = createAsyncThunk(\n  'categories/add-category',\n  async (data: any, { rejectWithValue, dispatch }) => {\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.post(backendUrls.categories.ADD_CATEGORY, data.formData, {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      // toast.success(res?.data.message);\n      return res?.data?.message;\n    } catch (error: any) {\n      return rejectWithValue(error);\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const getCategoriesAction = createAsyncThunk(\n  'categories/categories',\n  async (args, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.get(backendUrls.categories.GET_CATEGORIES);\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error?.message) {\n        return rejectWithValue(error?.message);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const getCategoryPostsAction = createAsyncThunk(\n  'categories/category-posts',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.get(backendUrls.categories.GET_CATEGORY_POSTS(data?.id));\n      return res?.data;\n    } catch (error: any) {\n      return rejectWithValue(error);\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const updateCategorytAction = createAsyncThunk(\n  'categories/update-category',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.patch(backendUrls.categories.UPDATE_CATEGORY(data?.id), data.content, {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      toast.success('Category Updated!');\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        return rejectWithValue(error.response.data);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const deleteCategorytAction = createAsyncThunk(\n  'categories/delete-category',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.delete(backendUrls.categories.DELETE_CATEGORY(data?.id), {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      toast.success('Category Deleted!');\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        return rejectWithValue(error.response.data);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\n"],"names":["AddProject","_categories$","user","useAppSelector","state","auth","categories","setCategories","useState","title","setTitle","content","setContent","image","setImage","imagePreview","setImagePreview","selectedCategory","setSelectedCategory","_id","dispatch","useAppDispatch","navigate","useNavigate","useEffect","getCategoriesAction","then","res","payload","fetchedCategories","console","log","_jsx","AdminLayout","children","className","styles","_jsxs","htmlFor","id","value","onChange","e","target","map","category","name","onSubmit","async","preventDefault","formData","FormData","append","fetch","backendUrls","posts","ADD_POST","method","body","headers","concat","accessToken","ok","toast","success","paths","ADMIN","POSTS","error","encType","type","required","ReactQuill","theme","modules","toolbar","size","accept","files","file","reader","FileReader","onloadend","result","readAsDataURL","src","alt","crossOrigin","createAsyncThunk","data","_ref","rejectWithValue","startLoading","_res$data","axiosInstance","post","ADD_CATEGORY","Authorization","token","message","stopLoading","args","thunkAPI","_res$data2","get","GET_CATEGORIES","GET_CATEGORY_POSTS","_res$data3","patch","UPDATE_CATEGORY","response","_res$data4","delete","DELETE_CATEGORY"],"sourceRoot":""}