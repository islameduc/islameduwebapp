{"version":3,"file":"static/js/8445.b1db0dd5.chunk.js","mappings":"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","sources":["webpack://client/./src/components/admin/KandbanLoading/KanbanLoading.module.css?e88b","components/admin/KandbanLoading/KanbanLoading.component.tsx","webpack://client/./src/components/admin/no-data/NoData.module.css?ec6c","components/admin/no-data/NoData.component.tsx","webpack://client/./src/components/shared/blog-posts/blog-posts.module.css?bb1f","components/shared/blog-posts/BlogPosts.tsx","pages/admin/posts/Posts.page.tsx","pages/pagenation/Pagination.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"KanbanLoading_container__5QdVb\",\"content\":\"KanbanLoading_content__fi5xO\",\"close\":\"KanbanLoading_close__Qn-VV\"};","import React, { ChangeEvent, ReactNode } from 'react';\nimport classes from './KanbanLoading.module.css';\n\ninterface IProps {\n  kanbanLoading?: boolean;\n  children?: ReactNode | any;\n  contentStyle?: object;\n  containerStyle?: object;\n}\n\nconst KanbanLoading = ({ kanbanLoading, children, contentStyle, containerStyle }: IProps) => {\n  return (\n    <>\n      {kanbanLoading && (\n        <div className={classes.container} style={containerStyle}>\n          <div className={classes.content} style={contentStyle}>\n            {children}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default KanbanLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoData_container__U2Xbt\",\"note\":\"NoData_note__mGIma\",\"image\":\"NoData_image__8U2hq\"};","import React from 'react';\nimport noDataPlaceholder from '../../../assets/images/no-data.png';\nimport classes from './NoData.module.css';\nimport Button from '../button/Button.component';\n\nexport interface noDataProps {\n  infoText?: string;\n  text?: string;\n  onClick?: () => void;\n  height?: string;\n  minHeight?: string;\n  renderIcon?: () => React.ReactNode;\n  iconAfter?: boolean;\n  color?: string;\n  border?: string;\n  bgColor?: string;\n  textMargin?: string;\n  image?: string;\n  width?: string;\n  minWidth?: string;\n  imageWidth?: string;\n  imageHeight?: string;\n  fontSize?: string;\n}\n\nconst NoData = ({\n  infoText = '',\n  text = '',\n  onClick,\n  height = '60vh',\n  minHeight = '',\n  renderIcon,\n  iconAfter,\n  color,\n  bgColor = '#003B33',\n  border,\n  textMargin,\n  image,\n  width = '82vw',\n  minWidth = '',\n  imageWidth = '',\n  imageHeight = '',\n  fontSize = '16px',\n}: noDataProps) => {\n  return (\n    <div style={{ height, minHeight, width, minWidth }} className={classes.container}>\n      <div className={classes.note}>\n        <p style={{ fontSize }}>{infoText} 😥😓</p>\n      </div>\n      <div className={classes.image} style={{ width: imageWidth, height: imageHeight }}>\n        <img src={image ?? noDataPlaceholder} alt='no data' crossOrigin='anonymous' />\n      </div>\n      {text && (\n        <Button\n          text={text}\n          bgColor={bgColor}\n          width='30%'\n          onClick={onClick}\n          renderIcon={renderIcon}\n          iconAfter={iconAfter}\n          color={color}\n          border={border}\n          textMargin={textMargin}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NoData;\n","// extracted by mini-css-extract-plugin\nexport default {\"blogPosts\":\"blog-posts_blogPosts__ZZcqC\",\"blogPostcard\":\"blog-posts_blogPostcard__klaoJ\",\"blogPostImage\":\"blog-posts_blogPostImage__XJX6X\",\"blogPostContent\":\"blog-posts_blogPostContent__s9Xd2\",\"blogPostCategory\":\"blog-posts_blogPostCategory__DX2Zp\",\"blogPostDescription\":\"blog-posts_blogPostDescription__areOu\",\"blogPostTitle\":\"blog-posts_blogPostTitle__cF0Mw\"};","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './blog-posts.module.css';\nimport defaultImage from '../../../assets/images/default_post_image.jpeg';\nimport { useAppSelector } from '../../../store';\n\ninterface BlogPost {\n  _id: string;\n  title: string;\n  content: string;\n  category: string;\n  image?: {\n    httpPath: string;\n  };\n}\n\ninterface Props {\n  posts: BlogPost[];\n}\n\nconst BlogPosts: React.FC<Props> = ({ posts }) => {\n  const { user } = useAppSelector((state) => state.auth);\n\n  // console.log(posts);\n  const navigate = useNavigate();\n  const handleViewPostDetails = (postId: string) => {\n    window.scrollTo(0, 0)\n\n    if (user?.accessToken) {\n      navigate(`/admin/post-details/${postId}`);\n    }\n    else {\n      navigate(`/pages/post-details/${postId}`);\n    }\n  };\n  return (\n    <div className={styles.blogPosts}>\n      {posts &&\n        posts.map((post) => (\n          <div\n            key={post._id}\n            className={styles.blogPostcard}\n            onClick={() => handleViewPostDetails(post._id)}\n          >\n            <img\n              src={post.image?.httpPath || defaultImage}\n              crossOrigin='anonymous'\n              style={{ objectFit: 'cover', objectPosition: 'top' }}\n              alt={post.title}\n              className={styles.blogPostImage}\n            />\n            <div className={styles.blogPostContent}>\n              <h3 className={styles.blogPostTitle}>{post.title}</h3>\n              <p className={styles.blogPostCategory}>{post.category}</p>\n              {/* <p className={styles.blogPostDescription}>{post.content}</p> */}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default BlogPosts;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport AdminHeader from '../../../components/admin/admin-header/AdminHeader';\nimport ProjectCard from '../../../components/admin/project-card/ProjectCard';\nimport AdminLayout from '../../../layouts/Admin.layout';\nimport AdminSection from '../../../components/admin/admin-section/AdminSection.component';\nimport styles from './posts.module.css';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport {\n  getProjectsAction,\n  toggleProjectVisibilityAction,\n} from '../../../store/features/slices/projects/projects.action';\nimport { contributors } from '../../../assets/data/contributors';\nimport Button from '../../../components/admin/button/Button.component';\nimport { paths } from '../../../routers/paths';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport KanbanLoading from '../../../components/admin/KandbanLoading/KanbanLoading.component';\nimport Spinner from '../../../components/loaders/spinner/Spinner';\nimport NoData from '../../../components/admin/no-data/NoData.component';\nimport { getPostsAction } from '../../../store/features/slices/posts/posts.action';\nimport BlogPosts from '../../../components/shared/blog-posts/BlogPosts';\nimport Pagination from '../../pagenation/Pagination';\n\nconst Posts = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const [posts, setPosts] = useState<any>([]);\n  const { projectError, projects } = useAppSelector((state) => state.projects);\n  const [value, setValue] = useState<string>('');\n  const [allProjectsDashboard, setAllDashboardProjects] = useState<any>(projects?.data);\n  const effectRef = useRef<boolean>(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [visibleLoading, setVisibleLoading] = useState<string>('');\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(9);\n\n  const getAllProjects = () => {\n    const data = {\n      role: user?.user?.role,\n      token: user?.accessToken,\n    };\n    dispatch(getProjectsAction(data)).then((res: any) => {\n      if (projectError) {\n        setLoading(false);\n        return toast.error(projectError);\n      }\n      const { payload } = res;\n      setAllDashboardProjects(payload?.data);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (effectRef.current) {\n      effectRef.current = false;\n      setLoading(true);\n      getAllProjects();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (value) {\n      const filtered = allProjectsDashboard?.filter((project: any) =>\n        project?.title?.toLowerCase().includes(value.toLowerCase()),\n      );\n      setAllDashboardProjects(filtered);\n    } else {\n      getAllProjects();\n    }\n  }, [value]);\n\n  const handleMakeVisible = (projectId: string) => {\n    if (user?.user?.role !== 'superAdmin')\n      return toast.error('You are not authorized to change project visibility');\n    setVisibleLoading(projectId);\n    const data = {\n      id: projectId,\n      token: user?.accessToken,\n    };\n    const projectData = {\n      role: user?.user?.role,\n      token: user?.accessToken,\n    };\n    dispatch(toggleProjectVisibilityAction(data)).then(() => {\n      dispatch(getProjectsAction(projectData)).then((res: any) => {\n        const { payload } = res;\n        setAllDashboardProjects(payload?.data);\n        setLoading(false);\n        toast.success('Project Visibility Changed!');\n        setVisibleLoading('');\n      });\n    });\n  };\n\n  const handleAddNavigate = () => {\n    if (user?.user?.role !== 'superAdmin')\n      return toast.error('You are not authorized to add a post');\n    navigate(paths.ADMIN.ADD_POST);\n  };\n\n  const handleViewProjectDetails = (projectId: string) => {\n    navigate(`/admin/details/${projectId}`);\n  };\n\n  const handleEditProject = (projectId: string) => {\n    navigate(`/admin/edit/${projectId}`);\n  };\n\n  const getAllPosts = () => {\n    dispatch(getPostsAction()).then((res: any) => {\n      const { payload } = res;\n      if (payload) {\n        const fetchedPosts = payload?.data;\n        console.log(fetchedPosts);\n        setPosts(fetchedPosts);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n \n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPosts = posts.slice(firstPostIndex, lastPostIndex);\n\n  return (\n    <AdminLayout\n      title='I.P.E.S Posts'\n      contributors={allProjectsDashboard?.contributors}\n      searchValue={value}\n      onChange={(e) => setValue(e.target.value)}\n      showBack={false}\n      onClick={handleAddNavigate}\n      actionText='Add New Post'\n    >\n      <div>\n        {posts?.length > 0 ? (<>\n          <BlogPosts posts={currentPosts} />\n          <Pagination totalPosts={posts.length} postsPerPage= {postsPerPage} setCurrentPage={setCurrentPage} currentPage={currentPage} />\n</>\n        ) : (\n          <NoData\n            infoText='No Posts Yet'\n            onClick={() => navigate(paths.ADMIN.ADD_POST)}\n            text='Add New Post'\n          />\n        )}\n      </div>\n      <KanbanLoading kanbanLoading={loading}>\n        <Spinner size='18px' />\n      </KanbanLoading>\n    </AdminLayout>\n  );\n};\n\nexport default Posts;\n","\nimport React from 'react'\nimport './pagination.css'\n\ntype Props = {\n    totalPosts: number,\n    postsPerPage: number,\n    setCurrentPage: (page: number) => void,\n    currentPage: number,\n}\n\nexport default function Pagination({ totalPosts, postsPerPage, setCurrentPage, currentPage }: Props) {\n    const pages = [];\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        if (Math.ceil(totalPosts / postsPerPage) === 1) {\n            pages.push()\n        } else {\n            pages.push(i);\n        }\n    }\n\n    const goToPreviousPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    const goToNextPage = () => {\n        if (currentPage < pages.length) {\n            setCurrentPage(currentPage + 1);\n        }\n    }\n\n    return (\n        <div className='pagination'>\n            { !(Math.ceil(totalPosts / postsPerPage) === 1)?\n             <>\n            <button onClick={goToPreviousPage} className=\"arrow-button\">←</button>\n            {\n                pages.map((page, index) => {\n                    return (\n                        <button\n                            key={index}\n                            onClick={() => setCurrentPage(page)}\n                            className={page == currentPage ? 'active' : ''}\n                        >\n                            {page}\n                        </button>\n                    )\n                })\n            }\n            <button onClick={goToNextPage} className=\"arrow-button\">→</button>\n            </>: <div></div>}\n        </div>\n    )\n}"],"names":["_ref","kanbanLoading","children","contentStyle","containerStyle","_jsx","_Fragment","className","classes","style","infoText","text","onClick","height","minHeight","renderIcon","iconAfter","color","bgColor","border","textMargin","image","width","minWidth","imageWidth","imageHeight","fontSize","_jsxs","src","alt","crossOrigin","Button","posts","user","useAppSelector","state","auth","navigate","useNavigate","styles","map","post","_post$image","handleViewPostDetails","postId","_id","window","scrollTo","accessToken","concat","httpPath","defaultImage","objectFit","objectPosition","title","category","Posts","setPosts","useState","projectError","projects","value","setValue","allProjectsDashboard","setAllDashboardProjects","data","effectRef","useRef","loading","setLoading","visibleLoading","setVisibleLoading","dispatch","useAppDispatch","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","getAllProjects","_user$user","role","token","getProjectsAction","then","res","toast","error","payload","useEffect","current","filtered","filter","project","_project$title","toLowerCase","includes","getPostsAction","fetchedPosts","console","log","lastPostIndex","firstPostIndex","currentPosts","slice","AdminLayout","contributors","searchValue","onChange","e","target","showBack","handleAddNavigate","_user$user4","paths","ADMIN","ADD_POST","actionText","length","BlogPosts","Pagination","totalPosts","NoData","KanbanLoading","Spinner","size","pages","i","Math","ceil","push","goToPreviousPage","page","index","goToNextPage"],"sourceRoot":""}