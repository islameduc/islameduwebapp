{"version":3,"file":"static/js/9514.3c8da833.chunk.js","mappings":"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","sources":["assets/data/regions.ts","components/admin/dropdown/Dropdown.component.tsx","webpack://client/./src/components/admin/settings-sidebar/SettingsSidebar.module.css?d77a","components/admin/settings-sidebar/SettingsSidebar.component.tsx","webpack://client/./src/components/admin/settings-mobile-navs/SettingsMobileNavs.module.css?b856","components/admin/settings-mobile-navs/SettingsMobileNavs.component.tsx","layouts/Settings.layout.tsx","assets/data/languages.ts","assets/data/timezones.ts","assets/data/timeFormat.ts","assets/svg/CircleGreyIcon.tsx","webpack://client/./src/components/admin/timezone/TimeZone.module.css?cb70","components/admin/timezone/TimeZone.component.tsx","webpack://client/./src/pages/admin/settings/Settings.module.css?2619","pages/admin/settings/Settings.page.tsx","webpack://client/./src/components/admin/dropdown/Dropdown.module.css?4b82"],"sourcesContent":["export enum Regions {\n  South_West = 'South West',\n  North_West = 'North West',\n  South = 'South',\n  North = 'North',\n  East = 'East',\n  West = 'West',\n  Far_North = 'Far North',\n  Littoral = 'Littoral',\n  Center = 'Center',\n  Adamawa = 'Adamawa',\n}\nexport const regions = [\n  {\n    id: 0,\n    region: Regions.South_West,\n  },\n  {\n    id: 1,\n    region: Regions.North_West,\n  },\n  {\n    id: 2,\n    region: Regions.South,\n  },\n  {\n    id: 3,\n    region: Regions.North,\n  },\n  {\n    id: 4,\n    region: Regions.East,\n  },\n  {\n    id: 5,\n    region: Regions.West,\n  },\n  {\n    id: 6,\n    region: Regions.Far_North,\n  },\n  {\n    id: 7,\n    region: Regions.Littoral,\n  },\n  {\n    id: 8,\n    region: Regions.Center,\n  },\n  {\n    id: 9,\n    region: Regions.Adamawa,\n  },\n];\n","import { useState } from 'react';\nimport { ArrowDownIcon } from '../../../assets/svg';\nimport { DropdownTypes } from './Dropdown.type';\nimport classes from './Dropdown.module.css';\n\nconst Dropdown = ({\n  label = '',\n  options = [],\n  id = '',\n  style,\n  children,\n  handleOption = () => '',\n  isDropdown = true,\n  initialValue = '',\n  dropItemsStyle,\n}: DropdownTypes) => {\n  const [dropdown, setDropdown] = useState(false);\n  const [value, setValue] = useState('');\n  const [color, setColor] = useState('');\n  return (\n    <>\n      {isDropdown ? (\n        <div className={classes.container} style={style}>\n          {label && (\n            <span style={{ marginBottom: '10px', fontWeight: '600', fontSize: '14px' }}>\n              {label}\n            </span>\n          )}\n          <div className={classes.dropdownContainer}>\n            <div\n              className={classes.dropdownHeader}\n              onClick={() => setDropdown(!dropdown)}\n              style={{ color }}\n            >\n              {value || initialValue}\n              <ArrowDownIcon width='10' height='7' color={color} />\n            </div>\n            {dropdown && (\n              <div className={classes.dropdownItems} style={dropItemsStyle}>\n                {options.map((item: any) => (\n                  <div\n                    key={item.id}\n                    className={classes.dropdownItem}\n                    onClick={() => {\n                      setValue(item[id]);\n                      setColor(item.iconColor);\n                      setDropdown(false);\n                      handleOption(item[id]);\n                    }}\n                  >\n                    <span style={{ color: item.iconColor }}>{item[id]}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div className={classes.container} style={style}>\n          {label && (\n            <span style={{ marginBottom: '10px', fontWeight: '600', fontSize: '14px' }}>\n              {label}\n            </span>\n          )}\n          <div className={classes.dropdownContainer}>\n            <div\n              className={classes.dropdownHeader}\n              onClick={() => setDropdown(!dropdown)}\n              style={{ color }}\n            >\n              {value || initialValue}\n              <ArrowDownIcon width='15' height='7' color={color} />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Dropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SettingsSidebar_container__W+SU6\",\"activeItem\":\"SettingsSidebar_activeItem__LvAQF\"};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { settingsSidebar } from '../../../assets/data/sidebar';\nimport SidebarItem from '../sidebar-item/SidebarItem.component';\nimport classes from './SettingsSidebar.module.css';\n\ninterface sidebarProps {\n  width?: string;\n}\n\nconst SettingsSidebar = ({ width }: sidebarProps) => {\n  const [active, setActive] = useState<string>('General');\n  const navigate = useNavigate();\n  return (\n    <div className={classes.container} style={{ width }}>\n      <div>\n        {settingsSidebar.map((item: any) => (\n          <SidebarItem\n            key={item.id}\n            text={item.title}\n            to={item.path}\n            activeClassName={classes.activeItem}\n            style={{\n              backgroundColor: 'white',\n              borderRadius: ' 25px',\n              display: 'flex',\n              justifyContent: 'center',\n              marginBottom: '18px',\n              padding: '8px 10px',\n              fontWeight: '600',\n            }}\n            fontSize='12px'\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsSidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SettingsMobileNavs_container__u56mH\",\"icon\":\"SettingsMobileNavs_icon__yNUQz\"};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SidebarItem from '../sidebar-item/SidebarItem.component';\nimport { settingsSidebar, sidebar } from '../../../assets/data/sidebar';\nimport classes from './SettingsMobileNavs.module.css';\n\ninterface sidebarProps {\n  showSidebar?: boolean;\n  onClick?: () => void;\n}\n\nconst SettingsMobileNavs = ({ showSidebar, onClick }: sidebarProps) => {\n  const [active, setActive] = useState<string>('');\n  const navigate = useNavigate();\n  return (\n    <>\n      {showSidebar && (\n        <div className={classes.container}>\n          {settingsSidebar.map((item: any) => (\n            <SidebarItem\n              key={item.id}\n              text={item.title}\n              activeClassName={classes.activeItem}\n              style={{\n                backgroundColor: 'white',\n                borderRadius: ' 25px',\n                display: 'flex',\n                marginBottom: '18px',\n                padding: '6px 8px',\n                fontWeight: '600',\n                fontSize: '16px',\n              }}\n              renderIcon={() => (\n                <div className={classes.icon}>\n                  <item.icon color={item.title === active ? '#00262a' : '#929283'} size='24' />\n                </div>\n              )}\n              to={item.path}\n              onClick={onClick}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SettingsMobileNavs;\n","import React, { useState } from 'react';\nimport SettingsSidebar from '../components/admin/settings-sidebar/SettingsSidebar.component';\nimport AdminLayout from './Admin.layout';\nimport { LayoutTypes } from './Layout.type';\nimport SettingsMobileNavs from '../components/admin/settings-mobile-navs/SettingsMobileNavs.component';\nimport classes from './Layout.module.css';\n\nconst SettingsLayout = ({ children, padding = '', inlineWidth = '' }: LayoutTypes) => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <AdminLayout title='Settings' childBackground='#fff' bgColor='#fff'>\n      <div className={classes.container}>\n        <div className={classes.sidebar}>\n          <SettingsSidebar />\n        </div>\n        <div className={classes.content} style={{ padding }}>\n          <div className={classes.childrenContent} style={{ width: inlineWidth }}>\n            {children}\n          </div>\n        </div>\n      </div>\n      <div className={classes.mobileNavs}>\n        <SettingsMobileNavs showSidebar={showSidebar} onClick={() => setShowSidebar(false)} />\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default SettingsLayout;\n","export const languages = [\n  {\n    id: 0,\n    lang: 'English (Default)',\n  },\n  {\n    id: 1,\n    lang: 'French',\n  },\n  {\n    id: 2,\n    lang: 'German',\n  },\n];\n","export const timezones = [\n  {\n    id: 0,\n    timezone: 'GMT+1',\n  },\n  {\n    id: 1,\n    timezone: 'GMT+2',\n  },\n  {\n    id: 2,\n    timezone: 'GMT+3',\n  },\n];\n","export enum formatEnum {\n  TWELVE_HOURS = '12 Hours',\n  TWENTYFOUR_HOURS = '24 Hours',\n}\n\nexport const timeFormat = [\n  {\n    id: 0,\n    format: formatEnum.TWENTYFOUR_HOURS,\n  },\n  {\n    id: 1,\n    format: formatEnum.TWELVE_HOURS,\n  },\n];\n","import React from 'react';\nimport { svgProps } from './svgProps';\n\nconst CircleGreyIcon = ({ size = '20', style, color = '#F5F5F7' }: svgProps) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    style={style}\n  >\n    <circle cx='10' cy='10' r='9' stroke={color} strokeWidth='2' />\n  </svg>\n);\n\nexport default CircleGreyIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TimeZone_container__O0ncy\",\"formatItem\":\"TimeZone_formatItem__2ILOP\",\"formatItemActive\":\"TimeZone_formatItemActive__ia1lI\",\"formats\":\"TimeZone_formats__GTgv9\"};","import { useState } from 'react';\nimport { timeFormat } from '../../../assets/data/timeFormat';\nimport { CircleGreenIcon } from '../../../assets/svg';\nimport CircleGreyIcon from '../../../assets/svg/CircleGreyIcon';\nimport classes from './TimeZone.module.css';\n\ninterface timeZoneTypes {\n  handleOption?: (item: string) => void;\n}\n\nconst TimeZone = ({ handleOption = () => '' }: timeZoneTypes) => {\n  const [active, setActive] = useState<string>('24 Hours');\n  return (\n    <div className={classes.container}>\n      <span style={{ fontWeight: 'bold', marginBottom: '10px', fontSize: '13px' }}>\n        Time Format\n      </span>\n      <div className={classes.formats}>\n        {timeFormat?.map((f: any, index) => (\n          <div\n            className={\n              f.format === active\n                ? `${classes.formatItem} ${classes.formatItemActive}`\n                : `${classes.formatItem}`\n            }\n            style={{ margin: index === 0 ? '0 8px 0 0' : '0 0 0 8px' }}\n            key={f.id}\n            onClick={() => {\n              setActive(f.format);\n              handleOption(f.format);\n            }}\n          >\n            <span style={{ marginRight: '8px' }}>{f.format}</span>\n            {f.format === active ? <CircleGreenIcon size='16' /> : <CircleGreyIcon size='16' />}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TimeZone;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Settings_container__h-5-A\",\"sidebar\":\"Settings_sidebar__ppmVT\",\"content\":\"Settings_content__Zv1Dl\",\"rightButton\":\"Settings_rightButton__W3AQG\",\"leftButton\":\"Settings_leftButton__fQhln\",\"actionButtons\":\"Settings_actionButtons__2O3Ut\"};","import React, { useEffect, useState } from 'react';\nimport { languages } from '../../../assets/data/languages';\nimport { regions } from '../../../assets/data/regions';\nimport { timezones } from '../../../assets/data/timezones';\nimport Button from '../../../components/admin/button/Button.component';\nimport Dropdown from '../../../components/admin/dropdown/Dropdown.component';\nimport TimeZone from '../../../components/admin/timezone/TimeZone.component';\nimport SettingsLayout from '../../../layouts/Settings.layout';\nimport classes from './Settings.module.css';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport {\n  getProfileAction,\n  updateGeneralSettingsAction,\n} from '../../../store/features/slices/members/members.action';\nimport { getLocalRegion, setLocalRegion } from '../../../utils/localStorage';\nimport { formatEnum } from '../../../assets/data/timeFormat';\nimport { toast } from 'react-toastify';\n\nconst Settings = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const { profile } = useAppSelector((state) => state.members);\n  const dispatch = useAppDispatch();\n\n  const [region, setRegion] = useState<string>(\n    profile?.generalSettings?.region ?? regions[0]?.region,\n  );\n  const [language, setLanguage] = useState<string>(\n    profile?.generalSettings?.language ?? languages[0]?.lang,\n  );\n  const [timezone, setTimezone] = useState<string>(\n    profile?.generalSettings?.timezone ?? timezones[0]?.timezone,\n  );\n  const [timeFormat, setTimeFormat] = useState<string>('' ?? formatEnum.TWELVE_HOURS);\n  useEffect(() => {\n    dispatch(getProfileAction(user?.accessToken));\n  }, []);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleGeneralSettingsUpdate = () => {\n    setLoading(true);\n    const data = {\n      content: {\n        language,\n        timezone,\n        twelveHourFormat: timeFormat === formatEnum.TWELVE_HOURS ? true : false,\n        region,\n      },\n      token: user?.accessToken,\n    };\n    dispatch(updateGeneralSettingsAction(data))\n      .then((res: any) => {\n        const { payload } = res;\n        if (Array.isArray(payload?.errors)) {\n          payload?.errors.forEach((err: any) => {\n            toast.error(err);\n          });\n          return;\n        }\n        toast.success(payload?.message);\n        dispatch(getProfileAction(user?.accessToken));\n      })\n      .catch((err: any) => {\n        toast.error(err?.message);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <SettingsLayout inlineWidth='100%'>\n      <Dropdown\n        options={regions}\n        id='region'\n        label='Region'\n        handleOption={(reg: string) => {\n          setRegion(reg);\n          setLocalRegion(reg);\n        }}\n        initialValue={region ?? profile?.generalSettings?.region ?? regions[0]?.region}\n      />\n      <Dropdown\n        label='Languages'\n        options={languages}\n        id='lang'\n        initialValue={language ?? profile?.generalSettings?.language ?? languages[0]?.lang}\n        handleOption={(reg: string) => {\n          setLanguage(reg);\n        }}\n      />\n      <Dropdown\n        label='Timezone'\n        options={timezones}\n        id='timezone'\n        initialValue={timezone ?? profile?.generalSettings?.timezone ?? timezones[0]?.timezone}\n        handleOption={(reg: string) => {\n          setTimezone(reg);\n        }}\n      />\n      <TimeZone\n        handleOption={(reg: string) => {\n          setTimeFormat(reg);\n        }}\n      />\n      <div className={classes.actionButtons}>\n        <div className={classes.leftButton}>\n          <Button\n            text='Save'\n            bgColor='#003B33'\n            color='#fff'\n            width='100%'\n            onClick={handleGeneralSettingsUpdate}\n            loading={loading}\n          />\n        </div>\n        <div className={classes.rightButton}>\n          <Button\n            text='Cancel'\n            border='1px solid #00262A'\n            color='#00262A'\n            width='100%'\n            bgColor='#fff'\n          />\n        </div>\n      </div>\n    </SettingsLayout>\n  );\n};\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dropdown_container__hGUZ1\",\"dropdownContainer\":\"Dropdown_dropdownContainer__k3HvQ\",\"dropdownItems\":\"Dropdown_dropdownItems__mvUaw\",\"dropdownItem\":\"Dropdown_dropdownItem__2F6ru\",\"dropdownHeader\":\"Dropdown_dropdownHeader__HwKyp\"};"],"names":["Regions","regions","id","region","South_West","North_West","South","North","East","West","Far_North","Littoral","Center","Adamawa","_ref","label","options","style","children","handleOption","isDropdown","initialValue","dropItemsStyle","dropdown","setDropdown","useState","value","setValue","color","setColor","_jsx","_Fragment","_jsxs","className","classes","container","marginBottom","fontWeight","fontSize","dropdownContainer","dropdownHeader","onClick","ArrowDownIcon","width","height","dropdownItems","map","item","dropdownItem","iconColor","active","setActive","useNavigate","settingsSidebar","SidebarItem","text","title","to","path","activeClassName","backgroundColor","borderRadius","display","justifyContent","padding","showSidebar","activeItem","renderIcon","icon","size","inlineWidth","setShowSidebar","AdminLayout","childBackground","bgColor","sidebar","SettingsSidebar","content","childrenContent","mobileNavs","SettingsMobileNavs","languages","lang","timezones","timezone","formatEnum","timeFormat","format","TWENTYFOUR_HOURS","TWELVE_HOURS","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","f","index","concat","margin","marginRight","CircleGreenIcon","CircleGreyIcon","Settings","_profile$generalSetti","_profile$generalSetti2","_regions$","_profile$generalSetti3","_profile$generalSetti4","_languages$","_profile$generalSetti5","_profile$generalSetti6","_timezones$","_ref2","_profile$generalSetti7","_regions$2","_ref3","_profile$generalSetti8","_languages$2","_ref4","_profile$generalSetti9","_timezones$2","user","useAppSelector","state","auth","profile","members","dispatch","useAppDispatch","setRegion","generalSettings","language","setLanguage","setTimezone","setTimeFormat","useEffect","getProfileAction","accessToken","loading","setLoading","SettingsLayout","Dropdown","reg","setLocalRegion","TimeZone","Button","handleGeneralSettingsUpdate","data","twelveHourFormat","token","updateGeneralSettingsAction","then","res","payload","Array","isArray","errors","forEach","err","toast","error","success","message","catch","finally","border"],"sourceRoot":""}