{"version":3,"file":"static/js/8958.49a8011d.chunk.js","mappings":"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","sources":["webpack://client/./src/components/admin/KandbanLoading/KanbanLoading.module.css?e88b","components/admin/KandbanLoading/KanbanLoading.component.tsx","webpack://client/./src/components/admin/delete-modal/DeleteModal.module.css?a435","components/admin/delete-modal/DeleteModal.component.tsx","webpack://client/./src/components/shared/blog-post-card/blog-post-card.module.css?f0f7","components/shared/blog-post-card/BlogPostCard.tsx","webpack://client/./src/components/admin/update-post-modal/add-post-modal.module.css?5bb2","components/admin/update-post-modal/UpdatePostModal.tsx","pages/admin/post-details/PostDetails.page.tsx","store/features/slices/categories/categories.action.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"KanbanLoading_container__5QdVb\",\"content\":\"KanbanLoading_content__fi5xO\",\"close\":\"KanbanLoading_close__Qn-VV\"};","import React, { ChangeEvent, ReactNode } from 'react';\nimport classes from './KanbanLoading.module.css';\n\ninterface IProps {\n  kanbanLoading?: boolean;\n  children?: ReactNode | any;\n  contentStyle?: object;\n  containerStyle?: object;\n}\n\nconst KanbanLoading = ({ kanbanLoading, children, contentStyle, containerStyle }: IProps) => {\n  return (\n    <>\n      {kanbanLoading && (\n        <div className={classes.container} style={containerStyle}>\n          <div className={classes.content} style={contentStyle}>\n            {children}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default KanbanLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DeleteModal_container__fLKYW\"};","import React from 'react';\nimport Button from '../button/Button.component';\nimport classes from './DeleteModal.module.css';\n\ninterface IProps {\n  onDelete: () => void;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nconst DeleteModal = ({ onDelete, onCancel, loading }: IProps) => {\n  return (\n    <div className={classes.container}>\n      <span style={{ fontSize: '12px' }}>Are you sure you want to Delete?</span>\n      <div style={{ display: 'flex', alignItems: 'center', width: '100%', margin: '15px 0 0' }}>\n        <Button\n          text='Yes'\n          onClick={onDelete}\n          color='red'\n          border='1px solid red'\n          bgColor=''\n          width='100%'\n          margin='0 10px 0 0'\n          loading={loading}\n          spinnerSize='16px'\n          fillColor='red'\n        />\n        <Button text='Cancel' onClick={onCancel} width='100%' />\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"postContainer\":\"blog-post-card_postContainer__Uy1W6\",\"title\":\"blog-post-card_title__R9Xth\",\"category\":\"blog-post-card_category__Oy3mB\",\"image\":\"blog-post-card_image__f0QWi\",\"content\":\"blog-post-card_content__f1B5C\"};","import React from 'react';\nimport styles from './blog-post-card.module.css';\nimport defaultImage from '../../../assets/images/default_post_image.jpeg'\n\ninterface BlogPost {\n  _id: string;\n  title: string;\n  content: string;\n  category: string;\n  author: {\n    _id: string;\n  };\n  image: {\n    httpPath: string;\n  };\n  numberOfViews: number;\n  createdAt: string;\n}\n\ninterface BlogPostCardProps {\n  post: BlogPost;\n}\n\nconst BlogPostCard: React.FC<BlogPostCardProps> = ({ post }) => {\n  return (\n    <div className={styles.postContainer}>\n      <h1 className={styles.title}>{post?.title}</h1>\n      <h2 className={styles.category}>Category: {post?.category}</h2>\n      {post?.image && <img src={post.image?.httpPath || defaultImage} alt={post.title} className={styles.image} crossOrigin='anonymous' />}\n      <div className={styles.content} dangerouslySetInnerHTML={{ __html: post?.content || '' }} />\n    </div>\n  );\n};\n\nexport default BlogPostCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"add-post-modal_modalOverlay__qnqta\",\"modalContent\":\"add-post-modal_modalContent__hv+wX\",\"closeButton\":\"add-post-modal_closeButton__TkuFq\",\"formGroup\":\"add-post-modal_formGroup__1QdIV\",\"imagePreviewContainer\":\"add-post-modal_imagePreviewContainer__rt+6c\",\"imagePreview\":\"add-post-modal_imagePreview__VGsyr\",\"submitButtonContainer\":\"add-post-modal_submitButtonContainer__6E-xn\",\"submitButton\":\"add-post-modal_submitButton__kqZE8\",\"categoryName\":\"add-post-modal_categoryName__EIGPH\",\"title\":\"add-post-modal_title__g2wNy\",\"label\":\"add-post-modal_label__GclLB\"};","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport styles from './add-post-modal.module.css';\nimport { backendUrls } from '../../../api/urls';\n\ninterface Category {\n    _id: string;\n    name: string;\n}\n\ninterface UpdatePostModalProps {\n    postId: string;\n    postTitle: string;\n    postContent: string;\n    postImagePreview: string | null;\n    postCategoryId: string;\n    isOpen: boolean;\n    onClose: () => void;\n    onSubmit: () => void;\n    token: string;\n    categories: Category[];\n}\n\nconst UpdatePostModal: React.FC<UpdatePostModalProps> = ({\n    postId,\n    postTitle,\n    postContent,\n    postImagePreview,\n    postCategoryId,\n    isOpen,\n    onClose,\n    onSubmit,\n    token,\n    categories\n}) => {\n    const [title, setTitle] = useState(postTitle);\n    const [content, setContent] = useState(postContent);\n    const [categoryId, setCategoryId] = useState(postCategoryId);\n    const [image, setImage] = useState<File | null>(null);\n    const [imagePreview, setImagePreview] = useState<string | null>(postImagePreview);\n\n    useEffect(() => {\n        if (isOpen) {\n            setTitle(postTitle);\n            setContent(postContent);\n            setImage(null);\n            setImagePreview(postImagePreview);\n            setCategoryId(postCategoryId);\n        }\n    }, [isOpen, postTitle, postContent, postImagePreview, postCategoryId]);\n\n    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files) {\n            const file = e.target.files[0];\n            setImage(file);\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setImagePreview(reader.result as string);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('title', title);\n        formData.append('content', content);\n        formData.append('categoryId', categoryId);\n        if (image) {\n            formData.append('postImage', image);\n        }\n\n        try {\n            const response = await fetch(backendUrls.posts.UPDATE_POST(postId), {\n                method: 'PATCH',\n                body: formData,\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n            });\n\n            if (response.ok) {\n                onSubmit();\n                onClose();\n            } else {\n                console.error('Failed to update post');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className={styles.modalOverlay}>\n            <div className={styles.modalContent}>\n                <button className={styles.closeButton} onClick={onClose}>\n                    &times;\n                </button>\n                <h2 className={styles.title}>Update Post</h2>\n                <div className={styles.formGroup}>\n                    <label htmlFor=\"category\" className={styles.label}>Category</label>\n                    <select\n                        id=\"category\"\n                        value={categoryId}\n                        onChange={(e) => setCategoryId(e.target.value)}\n                        className={styles.select}\n                    >\n                        {categories.map((category: Category) => (\n                            <option key={category._id} value={category._id}>\n                                {category.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"title\" className={styles.label}>Title</label>\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"content\" className={styles.label}>Content</label>\n                        <ReactQuill\n                            value={content}\n                            onChange={setContent}\n                            theme=\"snow\"\n                            modules={{\n                                toolbar: [\n                                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                                    [{ size: [] }],\n                                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n                                    { 'indent': '-1' }, { 'indent': '+1' }],\n                                    ['link', 'image', 'video'],\n                                    ['clean']\n                                ],\n                            }}\n                        />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"image\" className={styles.label}>Image</label>\n                        <input\n                            type=\"file\"\n                            id=\"image\"\n                            accept=\"image/*\"\n                            onChange={handleImageChange}\n                        />\n                    </div>\n                    <div className={styles.imagePreviewContainer}>\n                        {imagePreview && <img src={imagePreview} alt=\"Preview\" className={styles.imagePreview} crossOrigin='anonymous' />}\n                    </div>\n                    <div className={styles.submitButtonContainer}>\n                        <button type=\"submit\" className={styles.submitButton}>Update Post</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdatePostModal;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport AdminLayout from '../../../layouts/Admin.layout';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { paths } from '../../../routers/paths';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getPostDetailsAction } from '../../../store/features/slices/posts/posts.action';\nimport { getCategoriesAction } from '../../../store/features/slices/categories/categories.action';\nimport BlogPostCard from '../../../components/shared/blog-post-card/BlogPostCard';\nimport UpdatePostModal from '../../../components/admin/update-post-modal/UpdatePostModal';\nimport { backendUrls } from '../../../api/urls';\nimport KanbanLoading from '../../../components/admin/KandbanLoading/KanbanLoading.component';\nimport Spinner from '../../../components/loaders/spinner/Spinner';\nimport DeleteModal from '../../../components/admin/delete-modal/DeleteModal.component';\n\nconst PostDetails = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const effectRef = useRef<boolean>(true);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [post, setPost] = useState<any>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [allCategories, setAllCategories] = useState<any>([]);\n  const [kanbanLoading, setKanbanLoading] = useState<boolean>(false);\n  const [shouldDelete, setShouldDelete] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [preview, setPreview] = useState<string | null>('');\n  const [categoryId, setCategoryId] = useState<string>('');\n  const { id } = useParams();\n\n  const postData = { id, token: user?.accessToken }; // general data for project\n\n  useEffect(() => {\n    if (effectRef.current) {\n      effectRef.current = false;\n      setKanbanLoading(true);\n      getPostDetails();\n    }\n  }, [id]);\n\n  const getPostDetails = () => {\n    dispatch(getPostDetailsAction(postData)).then((res: any) => {\n      if (res?.payload) {\n        const tempPost = res?.payload\n        setPost(tempPost);\n        setTitle(tempPost.title)\n        setContent(tempPost.content)\n        setPreview(tempPost.image ? tempPost.image.httpPath : null)\n        setCategoryId(tempPost.categoryId)\n      }\n\n      setKanbanLoading(false);\n    });\n  };\n\n  const getAllCategories = () => {\n    dispatch(getCategoriesAction()).then((res: any) => {\n      const { payload } = res;\n      if (payload) {\n        setAllCategories(payload);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllCategories();\n  }, []);\n\n  const handleDeletePost = async () => {\n    try {\n      const response = await fetch(backendUrls.posts.DELETE_POST(id as string), {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${user?.accessToken}`\n        },\n      });\n\n      if (response.ok) {\n        toast.success('Post deleted successfully')\n        navigate(paths.ADMIN.POSTS);\n      } else {\n        toast.error('Post deletion unsuccessful')\n        console.error('Failed to delete post');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleOpenAddModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSubmit = () => {\n    toast.success('Post updated successfully')\n    getPostDetails()\n  };\n\n  return (\n    <AdminLayout\n      title={post?.title}\n      padding='50px 20px 0'\n      actionText='Edit Post'\n      onClick={handleOpenAddModal}\n      onDeleteProject={handleDeletePost}\n      deleteText='Delete Post'\n      showDelete\n    >\n      <BlogPostCard post={post} />\n      <UpdatePostModal\n        postId={id as string}\n        postTitle={title}\n        postContent={content}\n        postImagePreview={preview}\n        postCategoryId={categoryId}\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onSubmit={handleSubmit}\n        token={user?.accessToken}\n        categories={allCategories}\n      />\n      <KanbanLoading kanbanLoading={kanbanLoading}>\n        <Spinner size='20px' />\n      </KanbanLoading>\n      <KanbanLoading kanbanLoading={shouldDelete}>\n        <DeleteModal\n          onDelete={handleDeletePost}\n          onCancel={() => setShouldDelete(false)}\n          loading={loading}\n        />\n      </KanbanLoading>\n    </AdminLayout>\n  );\n};\n\nexport default PostDetails;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { backendUrls } from '../../../../api/urls';\nimport { startLoading, stopLoading } from '../loader/loader.slice';\nimport { toast } from 'react-toastify';\nimport axiosInstance from '../../../../api/axiosConfig';\n\nexport const addCategoryAction = createAsyncThunk(\n  'categories/add-category',\n  async (data: any, { rejectWithValue, dispatch }) => {\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.post(backendUrls.categories.ADD_CATEGORY, data.formData, {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      // toast.success(res?.data.message);\n      return res?.data?.message;\n    } catch (error: any) {\n      return rejectWithValue(error);\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const getCategoriesAction = createAsyncThunk(\n  'categories/categories',\n  async (args, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.get(backendUrls.categories.GET_CATEGORIES);\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error?.message) {\n        return rejectWithValue(error?.message);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const getCategoryPostsAction = createAsyncThunk(\n  'categories/category-posts',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.get(backendUrls.categories.GET_CATEGORY_POSTS(data?.id));\n      return res?.data;\n    } catch (error: any) {\n      return rejectWithValue(error);\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const updateCategorytAction = createAsyncThunk(\n  'categories/update-category',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.patch(backendUrls.categories.UPDATE_CATEGORY(data?.id), data.content, {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      toast.success('Category Updated!');\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        return rejectWithValue(error.response.data);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\nexport const deleteCategorytAction = createAsyncThunk(\n  'categories/delete-category',\n  async (data: any, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI;\n    dispatch(startLoading());\n    try {\n      const res = await axiosInstance.delete(backendUrls.categories.DELETE_CATEGORY(data?.id), {\n        headers: {\n          Authorization: `Bearer ${data.token}`,\n        },\n      });\n      toast.success('Category Deleted!');\n      return res?.data?.result;\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        return rejectWithValue(error.response.data);\n      } else {\n        return rejectWithValue(error);\n      }\n    } finally {\n      dispatch(stopLoading());\n    }\n  },\n);\n\n"],"names":["_ref","kanbanLoading","children","contentStyle","containerStyle","_jsx","_Fragment","className","classes","style","onDelete","onCancel","loading","_jsxs","fontSize","display","alignItems","width","margin","Button","text","onClick","color","border","bgColor","spinnerSize","fillColor","_post$image","post","styles","title","category","image","src","httpPath","defaultImage","alt","crossOrigin","dangerouslySetInnerHTML","__html","content","postId","postTitle","postContent","postImagePreview","postCategoryId","isOpen","onClose","onSubmit","token","categories","setTitle","useState","setContent","categoryId","setCategoryId","setImage","imagePreview","setImagePreview","useEffect","modalOverlay","modalContent","closeButton","formGroup","htmlFor","label","id","value","onChange","e","target","select","map","_id","name","async","preventDefault","formData","FormData","append","fetch","backendUrls","posts","UPDATE_POST","method","body","headers","concat","ok","console","error","encType","type","required","ReactQuill","theme","modules","toolbar","size","accept","files","file","reader","FileReader","onloadend","result","readAsDataURL","imagePreviewContainer","submitButtonContainer","submitButton","PostDetails","user","useAppSelector","state","auth","effectRef","useRef","dispatch","useAppDispatch","navigate","useNavigate","setPost","setLoading","isModalOpen","setIsModalOpen","allCategories","setAllCategories","setKanbanLoading","shouldDelete","setShouldDelete","preview","setPreview","useParams","postData","accessToken","current","getPostDetails","getPostDetailsAction","then","res","payload","tempPost","getCategoriesAction","handleDeletePost","DELETE_POST","toast","success","paths","ADMIN","POSTS","AdminLayout","padding","actionText","handleOpenAddModal","onDeleteProject","deleteText","showDelete","BlogPostCard","UpdatePostModal","handleCloseModal","handleSubmit","KanbanLoading","Spinner","DeleteModal","createAsyncThunk","data","rejectWithValue","startLoading","_res$data","axiosInstance","ADD_CATEGORY","Authorization","message","stopLoading","args","thunkAPI","_res$data2","get","GET_CATEGORIES","GET_CATEGORY_POSTS","_res$data3","patch","UPDATE_CATEGORY","response","_res$data4","delete","DELETE_CATEGORY"],"sourceRoot":""}