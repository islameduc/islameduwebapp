{"version":3,"file":"static/js/9722.0d53e2d1.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/invariant/src/index.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/react-dnd/src/core/DndContext.ts","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","invariant","condition","format","args","process","undefined","Error","error","argIndex","replace","name","framesToPop","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","memoize","fn","result","memoized","EnterLeaveCounter","enter","enteringNode","previousLength","this","entered","itemsA","itemsB","set","Set","insertItem","item","add","forEach","push","union","filter","node","isNodeInDocument","contains","leave","leavingNode","items","reset","NativeDragSource","initializeExposedProperties","config","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","slice","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","interpolate","x","xs","ys","c1s","c2s","c3s","mid","low","high","Math","floor","xHere","max","diff","diffSq","indexes","sort","dys","dxs","ms","dx","dy","m2","mNext","dxNext","common","m","c1","invDx","ELEMENT_NODE","getNodeClientOffset","el","nodeType","parentElement","top","left","getBoundingClientRect","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","document","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","sourceWidth","offsetHeight","sourceHeight","anchorX","anchorY","dragPreviewWidth","dragPreviewHeight","width","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","calculateYOffset","OptionsReader","globalContext","ref","rootElement","optionsArgs","options","ownerDocument","HTML5BackendImpl","profile","ref1","sourcePreviewNodes","size","sourcePreviewNodeOptions","sourceNodeOptions","sourceNodes","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","dragOverTargetIds","setup","root","__isReactDndBackendSetUp","addEventListeners","teardown","removeEventListeners","clearCurrentDragSourceNode","asyncEndDragFrameId","cancelAnimationFrame","connectDragPreview","sourceId","delete","connectDragSource","handleDragStart","handleSelectStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","targetId","handleDragEnter","handleDragOver","handleDrop","target","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getCurrentSourceNodeOptions","_objectSpread","dropEffect","altKeyPressed","getCurrentDropEffect","isDraggingNativeItem","getCurrentSourcePreviewNodeOptions","captureDraggingState","itemType","getItemType","beginDragNativeItem","type","currentNativeSource","createNativeDragSource","currentNativeHandle","registry","addSource","actions","setCurrentDragSourceNode","currentDragSourceNode","mouseMoveTimeoutTimer","setTimeout","endDragIfSourceWasRemovedFromDOM","clearTimeout","defaultPrevented","unshift","_e","manager","Map","lastClientOffset","hoverRafId","getSourceClientOffset","endDragNativeItem","removeSource","body","cancelHover","scheduleHover","requestAnimationFrame","hover","publishSource","nativeType","setDragImage","dragPreviewOffset","setData","err","publishDragSource","hasAttribute","preventDefault","enterLeaveCounter","altKey","canDropOnTarget","drop","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","HTML5Backend","context","DndContext","createContext","dragDropManager","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","dispatch","getSource","verifyInvariants","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","createDrop","didDrop","targetIds","getTargetIds","reverse","getDroppableTargets","index","dropResult","getTarget","verifyDropResultType","getDropResult","determineDropResult","action","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","createHover","targetIdsArg","verifyTargetIdsIsArray","getTargetType","splice","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","receiveBackend","backend","getBackend","store","createDragDropActions","boundActions","actionCreator","apply","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","subscribe","subtract","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","subscribeToStateChange","listener","handlerIds","prevStateId","stateId","handleChange","state","currentStateId","canSkipListener","dirtyIds","areDirty","dirtyHandlerIds","subscribeToOffsetChange","previousState","dragOffset","nextState","canDrop","isDraggingSource","isOverTarget","shallow","dragOperation","getItem","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","observer","createTextNode","observe","characterData","data","RawTask","task","onError","release","asapQueue","enqueueTask","queue","q","requestFlush","flushing","pendingErrors","capacity","flush","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","shift","taskFactory","create","tasks","freeTasks","pop","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","HandlerRole","SOURCE","TARGET","nextUniqueId","getNextHandlerId","role","id","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","done","next","HandlerRegistryImpl","validateSourceContract","addHandler","addTarget","validateTargetContract","containsHandler","handler","dragSources","dropTargets","includePinned","isSourceId","pinnedSourceId","pinnedSource","isTargetId","removeTarget","strictEquality","prevTargetIds","has","count","xor","didChange","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","obj","path","c","createDragDropManager","backendFactory","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","instanceId","makeStoreInstance","INSTANCE_SYM","Symbol","for","DndProvider","memo","_param","children","props","isGlobalInstance","getGlobalContext","ctx","createSingletonDndContext","getDndContextValue","useEffect","_jsx","Provider","useMonitorOutput","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","getHandlerId","useCollectedProps","collector","connector","reconnect","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","SourceConnector","receiveHandlerId","newHandlerId","connectTarget","dragSourceOptions","dragSourceOptionsInternal","dragPreviewOptions","dragPreviewOptionsInternal","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","current","clearDragSource","clearDragPreview","wrapConnectorHooks","isRef","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","internalMonitor","DragSourceImpl","spec","globalMonitor","end","useRegisteredDragSource","useDragDropManager","useDragSource","useDragType","unregister","registerSource","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","useDragSourceConnector","previewOptions","useContext","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","isOver","DropTargetImpl","useRegisteredDropTarget","useDropTarget","accept","useAccept","registerTarget","join","useDrop","useDropTargetMonitor","useDropTargetConnector","useLayoutEffect","arg","memoDeps","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","displayName","throwIfCompositeComponentElement","newRef","previousRef","cloneElement","setRef","cloneWithRef","wrappedHooks","endsWith","wrappedHook"],"sourceRoot":""}