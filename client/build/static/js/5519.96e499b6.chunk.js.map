{"version":3,"file":"static/js/5519.96e499b6.chunk.js","mappings":"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","sources":["webpack://client/./src/components/block/home/contact-form/contactform.module.css?0252","components/block/home/contact-form/ContactForm.tsx","webpack://client/./src/components/shared/auth/input/custominput.module.css?2d15","components/shared/auth/input/CustomInput.tsx","lib/utils/regex.ts","pages/admin/contact-page/ContactPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"contactform_contact__form__gpoZF\",\"textarea\":\"contactform_textarea__AdpMw\",\"btn\":\"contactform_btn__Iz3jD\"};","import { useState } from 'react';\nimport CustomInputField from '../../../shared/auth/input/CustomInput';\n\n// styles import\nimport styles from './contactform.module.css';\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { createContactFormAction } from '../../../../store/features/slices/contacts/contacts.action';\nimport { toast } from 'react-toastify';\nimport { emailRegex } from '../../../../lib/utils/regex';\nimport Button from '../../../admin/button/Button.component';\n\nconst ContactForm = () => {\n  const [fullNames, setFullNames] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const dispatch = useAppDispatch();\n  const { loading } = useAppSelector((state) => state.loader);\n\n  const clearForm = () => {\n    setEmail('');\n    setFullNames('');\n    setMessage('');\n  };\n\n  const handleContact = () => {\n    const data = { fullNames, email: email.trim(), message };\n    const validateEmail = emailRegex.test(email);\n    if (validateEmail) {\n      dispatch(createContactFormAction(data))\n        .then((res) => toast.success(res?.payload.message))\n        .catch((err: any) => toast.error(err?.message));\n      clearForm();\n      setError('');\n      return;\n    } else {\n      setError('Invalid Email Address');\n      return;\n    }\n  };\n\n  return (\n    <div className={styles.contact__form}>\n      <h1>Contact Us</h1>\n      <p>Reach out to us for any enquiries</p>\n      <div className={styles.form}>\n        <CustomInputField\n          placeholder='Full Names'\n          containsBorder={true}\n          border='1px solid #B7B7A4'\n          value={fullNames}\n          onChange={(e) => setFullNames(e.target.value)}\n        />\n        <CustomInputField\n          placeholder='Email'\n          containsBorder={true}\n          border='1px solid #B7B7A4'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          error={error}\n        />\n        <textarea\n          name=''\n          placeholder='Your Message'\n          cols={30}\n          rows={5}\n          className={styles.textarea}\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <Button\n          text='Submit'\n          onClick={handleContact}\n          loading={loading}\n          margin='20px 0 0'\n          padding='14px'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"custominput_input__N8Vk0\",\"left\":\"custominput_left__I+UiK\",\"container\":\"custominput_container__mblhj\",\"icon\":\"custominput_icon__AJhcK\",\"icon__right\":\"custominput_icon__right__lxd7e\",\"error__Msg\":\"custominput_error__Msg__sF5OZ\"};","import React from 'react';\n\nimport styles from './custominput.module.css';\n\ntype Props = {\n  placeholder: string;\n  icon?: JSX.Element;\n  left?: boolean;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name?: string;\n  // eslint-disable-next-line\n  value?: any;\n  type?: string;\n  iconRight?: JSX.Element;\n  containsBorder?: boolean;\n  border?: string;\n  height?: string;\n  error?: string;\n  hasError?: boolean;\n};\n\nconst CustomInputField: React.FC<Props> = ({\n  placeholder,\n  icon,\n  left,\n  onChange,\n  name,\n  value,\n  type,\n  iconRight,\n  containsBorder,\n  border,\n  height,\n  error,\n}) => {\n  return (\n    <>\n      <div\n        className={styles.container}\n        style={{ border: error ? '1px solid red' : '', marginBottom: error ? '6px' : '1.6rem' }}\n      >\n        <input\n          value={value}\n          name={name}\n          type={type}\n          onChange={onChange}\n          className={`${styles.input} ${left ? styles.left : ''}`}\n          placeholder={placeholder}\n          style={{\n            border: containsBorder ? border : 'none',\n            background: containsBorder ? 'none' : '#f4f4f1',\n            borderRadius: containsBorder ? '5px' : 'none',\n            height: height ?? '',\n          }}\n        />\n        <span className={styles.icon}>{icon}</span>\n        <span className={styles.icon__right}>{iconRight}</span>\n      </div>\n      {error && <p className={styles.error__Msg}>{error}</p>}\n    </>\n  );\n};\n\nexport default CustomInputField;\n","export const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n","import React from 'react'\nimport ContactForm from '../../../components/block/home/contact-form/ContactForm'\nimport AdminLayout from '../../../layouts/Admin.layout'\n\n\nconst ContactPage = () => {\n  return (\n    <AdminLayout\n      padding='50px 20px 0'\n    >\n      <ContactForm />\n    </AdminLayout>\n  )\n}\n\nexport default ContactPage"],"names":["ContactForm","fullNames","setFullNames","useState","email","setEmail","message","setMessage","error","setError","dispatch","useAppDispatch","loading","useAppSelector","state","loader","_jsxs","className","styles","contact__form","children","_jsx","form","CustomInputField","placeholder","containsBorder","border","value","onChange","e","target","name","cols","rows","textarea","Button","text","onClick","handleContact","data","trim","emailRegex","test","createContactFormAction","then","res","toast","success","payload","catch","err","margin","padding","_ref","icon","left","type","iconRight","height","_Fragment","style","marginBottom","concat","background","borderRadius","ContactPage","AdminLayout"],"sourceRoot":""}